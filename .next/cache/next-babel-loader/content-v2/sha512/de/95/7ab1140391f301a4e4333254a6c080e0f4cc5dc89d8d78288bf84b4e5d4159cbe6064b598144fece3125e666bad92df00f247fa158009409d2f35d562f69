{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\amitd\\\\Desktop\\\\REUNION\\\\reunion_nextjs\\\\Components\\\\Template\\\\SwipeTemplate\\\\Template.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport styles from \"./Template.module.css\";\nimport mage from 'next/image';\n\nconst Template = props => {\n  const {\n    0: isInViewport,\n    1: setIsInViewport\n  } = useState(false);\n  const sectionRef1 = useRef(null);\n\n  const handleIntersection = entries => {\n    entries.forEach(entry => {\n      setIsInViewport(entry.isIntersecting);\n    });\n  };\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(handleIntersection, {\n      threshold: 0.5 // Adjust as needed, 0.3 means 30% of the target element must be visible\n\n    });\n\n    if (sectionRef1.current) {\n      observer.observe(sectionRef1.current);\n    }\n\n    return () => {\n      if (sectionRef1.current) {\n        observer.unobserve(sectionRef1.current);\n      }\n    };\n  }, []);\n  const formattedText = props.text.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [line, index < props.text.split('\\n').length - 1 && /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 59\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.section,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: sectionRef1,\n      className: `{ ${!isInViewport ? styles.inViewport : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.topHeading,\n        children: props.topHeading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.main,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.left,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            className: styles.img,\n            src: props.img,\n            alt: \"some\",\n            layout: \"fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.right,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: styles.heading,\n            children: props.heading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.p_text,\n            children: formattedText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Template;","map":{"version":3,"sources":["C:/Users/amitd/Desktop/REUNION/reunion_nextjs/Components/Template/SwipeTemplate/Template.js"],"names":["React","useRef","useState","useEffect","styles","mage","Template","props","isInViewport","setIsInViewport","sectionRef1","handleIntersection","entries","forEach","entry","isIntersecting","observer","IntersectionObserver","threshold","current","observe","unobserve","formattedText","text","split","map","line","index","length","section","inViewport","topHeading","main","left","img","right","heading","p_text"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport styles from \"./Template.module.css\";\r\nimport mage from 'next/image';\r\n\r\nconst Template = (props) => {\r\n\r\n    const [isInViewport, setIsInViewport] = useState(false);\r\n    const sectionRef1 = useRef(null);\r\n\r\n    const handleIntersection = (entries) => {\r\n        entries.forEach((entry) => {\r\n            setIsInViewport(entry.isIntersecting);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(handleIntersection, {\r\n            threshold: 0.5, // Adjust as needed, 0.3 means 30% of the target element must be visible\r\n        });\r\n\r\n        if (sectionRef1.current) {\r\n            observer.observe(sectionRef1.current);\r\n        }\r\n\r\n        return () => {\r\n            if (sectionRef1.current) {\r\n                observer.unobserve(sectionRef1.current);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const formattedText = props.text.split('\\n').map((line, index) => (\r\n        <React.Fragment key={index}>\r\n            {line}\r\n            {index < props.text.split('\\n').length - 1 && <br />}\r\n        </React.Fragment>\r\n    ));\r\n    return (\r\n        <div className={styles.section}>\r\n            <div ref={sectionRef1} className={`{ ${!isInViewport ? styles.inViewport : ''}`}>\r\n                <h1 className={styles.topHeading}>{props.topHeading}</h1>\r\n                <div className={styles.main}>\r\n                    <div className={styles.left}>\r\n                        <Image className={styles.img} src={props.img} alt='some' layout='fill' />\r\n\r\n                    </div>\r\n                    <div className={styles.right}>\r\n                        <h4 className={styles.heading}>{props.heading}</h4>\r\n                        <p className={styles.p_text}>\r\n\r\n\r\n\r\n                            {formattedText}\r\n\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\nexport default Template"]},"metadata":{},"sourceType":"module"}